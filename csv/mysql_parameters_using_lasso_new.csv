Parameter,Description
innodb_buffer_pool_size,"Defines the size of the buffer pool, where InnoDB caches data and index pages to reduce disk I/O. Larger values improve performance by reducing disk reads but consume more memory."
innodb_log_file_size,"Specifies the size of each InnoDB redo log file. Larger log files can improve performance by reducing the frequency of log file rotations, but may increase crash recovery time."
innodb_log_buffer_size,"Sets the size of the buffer used for log data before it's written to the log files. Larger buffers reduce disk I/O but increase the risk of data loss in a crash."
innodb_flush_log_at_trx_commit,"Controls how often the log buffer is flushed to disk. Setting to 1 ensures ACID compliance but may reduce performance due to increased I/O."
innodb_flush_method,"Determines the method used by InnoDB to flush data to disk, such as 'O_DIRECT' or 'fsync'. Proper tuning can reduce I/O overhead and improve performance."
innodb_io_capacity,"Specifies the maximum number of I/O operations per second for background tasks like flushing dirty pages. Higher values suit SSDs, while lower values are for traditional HDDs."
innodb_max_dirty_pages_pct,"Sets the maximum percentage of dirty pages in the buffer pool. A higher value can improve write performance but may lead to I/O spikes during flushing."
innodb_file_per_table,"Enables separate tablespace files for each table, which can improve performance and management by isolating tables in their own files."
innodb_read_io_threads,"Sets the number of I/O threads for read operations. More threads can improve performance on systems with high read loads."
innodb_write_io_threads,"Sets the number of I/O threads for write operations. More threads can enhance performance on write-heavy systems."
query_cache_size,"Determines the amount of memory allocated for storing query results. Helps in speeding up repeated queries by caching results, but can be a bottleneck if data changes frequently."
query_cache_type,"Defines the behavior of the query cache. Can be set to cache all queries, none, or only those explicitly requested."
max_connections,"Sets the maximum number of simultaneous client connections. Higher values support more users but consume more resources."
table_open_cache,"Specifies the number of open tables that MySQL can keep in cache. A larger cache reduces the overhead of opening tables but consumes more memory."
thread_cache_size,"Sets the number of threads that MySQL keeps in cache for reuse. Larger values reduce the overhead of thread creation for new connections."
tmp_table_size,"Defines the maximum size for temporary tables in memory. Exceeding this size causes temporary tables to be written to disk, slowing down queries."
max_heap_table_size,"Specifies the maximum size for in-memory tables (HEAP). Larger values reduce disk I/O but consume more memory."
join_buffer_size,"Sets the size of the buffer used for joins that cannot use an index. Larger buffers improve performance but require more memory."
sort_buffer_size,"Determines the size of the buffer used for sorting operations. Larger buffers improve sort performance but consume more memory."
read_buffer_size,"Sets the size of the buffer used for sequential table scans. Larger buffers reduce disk I/O but require more memory."
read_rnd_buffer_size,"Specifies the buffer size for random reads from a MyISAM table. Larger buffers improve performance but consume more memory."
key_buffer_size,"Defines the size of the buffer used for caching MyISAM index blocks. Larger buffers reduce disk I/O for MyISAM tables but consume more memory."
bulk_insert_buffer_size,"Sets the buffer size for bulk inserts into MyISAM tables. Larger buffers improve insert performance but consume more memory."
innodb_thread_concurrency,"Limits the number of threads that can run concurrently inside InnoDB. Proper tuning helps in optimizing CPU utilization."
innodb_adaptive_hash_index,"Enables or disables the adaptive hash index, which can improve performance by reducing the need to search the buffer pool for data."
innodb_flush_neighbors,"Controls whether adjacent dirty pages are also flushed when flushing a page from the buffer pool. Tuning this can reduce write amplification."
innodb_lru_scan_depth,"Specifies the depth of the LRU (Least Recently Used) list that InnoDB scans to find pages for eviction. Deeper scans improve page management but increase CPU usage."
innodb_old_blocks_pct,"Defines the percentage of the buffer pool used for the 'old' blocks. Adjusting this can influence the cache hit rate for frequently accessed data."
innodb_old_blocks_time,"Sets the time in milliseconds a page must stay in the 'old' section of the buffer pool before being moved to the 'new' section. This helps in reducing cache pollution from short-lived data."
innodb_purge_threads,"Specifies the number of threads dedicated to purging deleted rows and undo logs in the background. More threads can speed up the purge process but may impact performance."
max_allowed_packet,"Sets the maximum size of a single SQL query packet that the server can process. Larger values support bigger data transfers but consume more memory."
transaction_allow_block_size,"Defines the size of the block that can be allocated to each transaction for metadata operations. Larger sizes can improve performance but increase memory usage."
max_heap_table_size,"Specifies the maximum size for in-memory tables (HEAP). Larger values reduce disk I/O but consume more memory."
innodb_online_alter_log_max_size,"Sets the maximum size of the log file used during online DDL operations for InnoDB tables. Larger values can speed up schema changes but consume more disk space."
key_cache_age_threshold,"Defines the age after which cached key blocks in the MyISAM key cache become candidates for eviction. Lower values may reduce cache efficiency."
binlog_cache_size,"Specifies the size of the cache used for binary logging during transactions. Larger caches reduce disk I/O for transactions but consume more memory."
innodb_sort_buffer_size,"Determines the size of the buffer used by InnoDB for sorting operations during index creation and ALTER TABLE operations. Larger buffers improve sorting speed but consume more memory."
